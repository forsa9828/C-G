{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alicia\\\\bootcamp1\\\\tester\\\\test\\\\src\\\\Components\\\\navMessage\\\\index.js\";\nimport React, { Component } from \"react\";\nimport \"./style.css\";\n\nclass NavMessage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: \"\",\n      animating: false\n    };\n\n    this.renderTheMessage = () => {\n      switch (this.state.message) {\n        case \"Correct\":\n          return \"You got it dude!\";\n        // break;\n\n        case \"Incorrect\":\n          return \"WRONG\";\n        // break;\n\n        default: // \"Click an Image\";\n\n      }\n    };\n  }\n\n  componentDidMount({\n    score,\n    topScore\n  }, prevState) {\n    const newAnimateValue = {\n      animating: true\n    }; // If topScore === 0 and score === 0 then an empty string\n\n    if (topScore === 0 && score === 0) {\n      newAnimateValue.message = \"\"; // if score === 0 and topScore > 0 then message is icorrect\n    } else if (score === 0 && topScore > 0) {\n      newAnimateValue.message = \"Incorrect\";\n    } else {\n      newAnimateValue.message = \"Correct\";\n    } //changing the state from above that is the functionality\n\n\n    if (score !== this.props.score || this.state.message !== this.newAnimateValue.message) this.setState(newAnimateValue);\n  } //to render the message \n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: this.state.animating ? this.state.message : \"\",\n      on: true,\n      AnimationEnd: () => this.setState({\n        animating: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }\n    }, this.renderMessage, \" \"));\n  }\n\n}\n\nexport default NavMessage;","map":{"version":3,"sources":["C:/Users/Alicia/bootcamp1/tester/test/src/Components/navMessage/index.js"],"names":["React","Component","NavMessage","state","message","animating","renderTheMessage","componentDidMount","score","topScore","prevState","newAnimateValue","props","setState","render","renderMessage"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,aAAP;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BE,KAD+B,GACvB;AACJC,MAAAA,OAAO,EAAE,EADL;AAEJC,MAAAA,SAAS,EAAE;AAFP,KADuB;;AAAA,SAsBnCC,gBAtBmC,GAsBhB,MAAM;AACrB,cAAO,KAAKH,KAAL,CAAWC,OAAlB;AACI,aAAK,SAAL;AACA,iBAAO,kBAAP;AACI;;AACJ,aAAK,WAAL;AACA,iBAAO,OAAP;AACI;;AACJ,gBAPJ,CASQ;;AATR;AAWH,KAlCkC;AAAA;;AAMnCG,EAAAA,iBAAiB,CAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAF,EAAqBC,SAArB,EAAgC;AAC7C,UAAMC,eAAe,GAAG;AAACN,MAAAA,SAAS,EAAE;AAAZ,KAAxB,CAD6C,CAEjD;;AACI,QAAII,QAAQ,KAAK,CAAb,IAAkBD,KAAK,KAAK,CAAhC,EAAmC;AAC/BG,MAAAA,eAAe,CAACP,OAAhB,GAA0B,EAA1B,CAD+B,CAE/B;AACN,KAHE,MAGI,IAAII,KAAK,KAAK,CAAV,IAAeC,QAAQ,GAAG,CAA9B,EAAiC;AACjCE,MAAAA,eAAe,CAACP,OAAhB,GAA0B,WAA1B;AACN,KAFM,MAED;AACFO,MAAAA,eAAe,CAACP,OAAhB,GAA0B,SAA1B;AACH,KAV+C,CAWjD;;;AACC,QAAII,KAAK,KAAK,KAAKI,KAAL,CAAWJ,KAArB,IAA8B,KAAKL,KAAL,CAAWC,OAAX,KAAuB,KAAKO,eAAL,CAAqBP,OAA9E,EACG,KAAKS,QAAL,CAAcF,eAAd;AACH,GApBkC,CAqBnC;;;AAcAG,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAI,MAAA,SAAS,EAAG,KAAKX,KAAL,CAAWE,SAAX,GAAuB,KAAKF,KAAL,CAAWC,OAAlC,GAA4C,EAA5D;AAAgE,MAAA,EAAE,MAAlE;AAAmE,MAAA,YAAY,EAAG,MAAM,KAAKS,QAAL,CAAc;AAACR,QAAAA,SAAS,EAAE;AAAZ,OAAd,CAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4H,KAAKU,aAAjI,MAAH,CADJ;AAIH;;AAxCkC;;AA0CnC,eAAeb,UAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass NavMessage extends Component {\r\n    state = {\r\n        message: \"\",\r\n        animating: false\r\n    };\r\n\r\ncomponentDidMount ({score, topScore}, prevState) {\r\n    const newAnimateValue = {animating: true};\r\n// If topScore === 0 and score === 0 then an empty string\r\n    if (topScore === 0 && score === 0) {\r\n        newAnimateValue.message = \"\";\r\n        // if score === 0 and topScore > 0 then message is icorrect\r\n } else if (score === 0 && topScore > 0) {\r\n        newAnimateValue.message = \"Incorrect\";\r\n }else {\r\n     newAnimateValue.message = \"Correct\"\r\n }\r\n//changing the state from above that is the functionality\r\n if (score !== this.props.score || this.state.message !== this.newAnimateValue.message)\r\n    this.setState(newAnimateValue)\r\n}\r\n//to render the message \r\nrenderTheMessage = () => {\r\n    switch(this.state.message) {\r\n        case \"Correct\": \r\n        return \"You got it dude!\";\r\n            // break;\r\n        case \"Incorrect\":\r\n        return \"WRONG\";\r\n            // break;\r\n        default:\r\n        \r\n            // \"Click an Image\";\r\n    }\r\n};\r\nrender () {\r\n    return (\r\n        <p><li className ={this.state.animating ? this.state.message : \"\"} on AnimationEnd ={() => this.setState({animating: false})}>{this.renderMessage} </li>\r\n        </p>\r\n    )\r\n}\r\n}\r\nexport default NavMessage;\r\n"]},"metadata":{},"sourceType":"module"}